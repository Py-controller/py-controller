openapi: 3.0.3
info:
  title: .Py_controller
  version: v0.5.0-alpha
  description: Controle de finan√ßas pessoas
paths:
  /api/accounts/:
    get:
      operationId: accounts_list
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
          description: ''
    post:
      operationId: accounts_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
  /api/accounts/{account_uuid}/:
    get:
      operationId: accounts_retrieve
      parameters:
      - in: path
        name: account_uuid
        schema:
          type: string
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
    put:
      operationId: accounts_update
      parameters:
      - in: path
        name: account_uuid
        schema:
          type: string
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
    patch:
      operationId: accounts_partial_update
      parameters:
      - in: path
        name: account_uuid
        schema:
          type: string
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAccount'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
    delete:
      operationId: accounts_destroy
      parameters:
      - in: path
        name: account_uuid
        schema:
          type: string
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/addresses/:
    get:
      operationId: addresses_list
      tags:
      - addresses
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
          description: ''
    post:
      operationId: addresses_create
      tags:
      - addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
  /api/login/:
    post:
      operationId: login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/planning/:
    get:
      operationId: planning_list
      tags:
      - planning
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Planning'
          description: ''
  /api/planning/{plan_uuid}/:
    get:
      operationId: planning_retrieve
      parameters:
      - in: path
        name: plan_uuid
        schema:
          type: string
        required: true
      tags:
      - planning
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Planning'
          description: ''
    put:
      operationId: planning_update
      parameters:
      - in: path
        name: plan_uuid
        schema:
          type: string
        required: true
      tags:
      - planning
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Planning'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Planning'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Planning'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Planning'
          description: ''
    patch:
      operationId: planning_partial_update
      parameters:
      - in: path
        name: plan_uuid
        schema:
          type: string
        required: true
      tags:
      - planning
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlanning'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlanning'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlanning'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Planning'
          description: ''
    delete:
      operationId: planning_destroy
      parameters:
      - in: path
        name: plan_uuid
        schema:
          type: string
        required: true
      tags:
      - planning
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/planning/create/{account_uuid}/:
    post:
      operationId: planning_create_create
      parameters:
      - in: path
        name: account_uuid
        schema:
          type: string
        required: true
      tags:
      - planning
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Planning'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Planning'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Planning'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Planning'
          description: ''
  /api/transactions/:
    get:
      operationId: transactions_list
      tags:
      - transactions
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
          description: ''
    post:
      operationId: transactions_create
      tags:
      - transactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
  /api/transactions/{id}/:
    get:
      operationId: transactions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - transactions
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    put:
      operationId: transactions_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - transactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    patch:
      operationId: transactions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - transactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTransaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTransaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTransaction'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    delete:
      operationId: transactions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - transactions
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/:
    get:
      operationId: users_list
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{user_uuid}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: user_uuid
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: user_uuid
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: user_uuid
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: user_uuid
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        account_number:
          type: string
          maxLength: 20
          minLength: 3
        agency:
          type: string
          maxLength: 5
          minLength: 3
        type:
          $ref: '#/components/schemas/TypeEnum'
        user_id:
          type: string
          format: uuid
          readOnly: true
        balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        code:
          type: string
          nullable: true
          maxLength: 3
          minLength: 3
        overdraft_limit:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
      required:
      - account_number
      - agency
      - balance
      - id
      - overdraft_limit
      - user_id
    Address:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        street:
          type: string
          maxLength: 80
        zip_code:
          type: string
          maxLength: 8
          minLength: 8
        district:
          type: string
          maxLength: 20
        city:
          type: string
          maxLength: 80
        number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        state:
          type: string
          maxLength: 50
      required:
      - city
      - district
      - id
      - number
      - state
      - street
      - zip_code
    CategoriesNotId:
      type: object
      properties:
        name:
          type: string
          maxLength: 50
      required:
      - name
    PatchedAccount:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        account_number:
          type: string
          maxLength: 20
          minLength: 3
        agency:
          type: string
          maxLength: 5
          minLength: 3
        type:
          $ref: '#/components/schemas/TypeEnum'
        user_id:
          type: string
          format: uuid
          readOnly: true
        balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        code:
          type: string
          nullable: true
          maxLength: 3
          minLength: 3
        overdraft_limit:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
    PatchedPlanning:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        start:
          $ref: '#/components/schemas/StartEnum'
        planning_cycle:
          $ref: '#/components/schemas/PlanningCycleEnum'
        number_of_cycles:
          type: integer
          maximum: 2147483647
          minimum: 0
        expense:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        category:
          $ref: '#/components/schemas/CategoriesNotId'
        account_id:
          type: string
          format: uuid
          readOnly: true
    PatchedTransaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        description:
          type: string
          maxLength: 255
        transaction_type:
          $ref: '#/components/schemas/TransactionTypeEnum'
        transaction_date:
          type: string
          format: date
        account:
          type: string
          format: uuid
        category:
          type: string
          format: uuid
    PatchedUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        birthdate:
          type: string
          format: date
        cpf:
          type: string
          maxLength: 14
        email:
          type: string
          format: email
          maxLength: 200
        username:
          type: string
          maxLength: 50
        password:
          type: string
          writeOnly: true
          maxLength: 128
        is_superuser:
          type: boolean
          readOnly: true
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        is_active:
          type: boolean
          readOnly: true
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
    Planning:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        start:
          $ref: '#/components/schemas/StartEnum'
        planning_cycle:
          $ref: '#/components/schemas/PlanningCycleEnum'
        number_of_cycles:
          type: integer
          maximum: 2147483647
          minimum: 0
        expense:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        category:
          $ref: '#/components/schemas/CategoriesNotId'
        account_id:
          type: string
          format: uuid
          readOnly: true
      required:
      - account_id
      - category
      - expense
      - id
      - planning_cycle
      - start
    PlanningCycleEnum:
      enum:
      - Month
      - Year
      type: string
    StartEnum:
      enum:
      - January
      - February
      - March
      - April
      - May
      - June
      - July
      - August
      - September
      - October
      - November
      - December
      type: string
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    Transaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        description:
          type: string
          maxLength: 255
        transaction_type:
          $ref: '#/components/schemas/TransactionTypeEnum'
        transaction_date:
          type: string
          format: date
        account:
          type: string
          format: uuid
        category:
          type: string
          format: uuid
      required:
      - account
      - amount
      - category
      - description
      - id
      - transaction_date
      - transaction_type
    TransactionTypeEnum:
      enum:
      - payment
      - receipt
      type: string
    TypeEnum:
      enum:
      - Current account
      - Savings account
      type: string
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        birthdate:
          type: string
          format: date
        cpf:
          type: string
          maxLength: 14
        email:
          type: string
          format: email
          maxLength: 200
        username:
          type: string
          maxLength: 50
        password:
          type: string
          writeOnly: true
          maxLength: 128
        is_superuser:
          type: boolean
          readOnly: true
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        is_active:
          type: boolean
          readOnly: true
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
      required:
      - cpf
      - email
      - first_name
      - id
      - is_active
      - is_superuser
      - last_name
      - password
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
